name: Deploy to Contabo

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to Contabo
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
            # Update package lists
            apt-get update -y &&

            # Install Node.js 20.x and npm if not installed
            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | bash - &&
              apt-get install -y nodejs git
            fi &&

            # Install Nginx and Certbot for SSL
            apt-get install -y nginx certbot python3-certbot-nginx &&

            # Configure Nginx for HTTP and HTTPS
            cat > /etc/nginx/sites-available/pet-speak-backend << 'EOF'
            server {
                listen 80;
                server_name pet-speak-backend.com www.pet-speak-backend.com;

                # Redirect all HTTP requests to HTTPS
                return 301 https://\$host\$request_uri;
            }

            server {
                listen 443 ssl;
                server_name pet-speak-backend.com www.pet-speak-backend.com;

                ssl_certificate /etc/letsencrypt/live/pet-speak-backend.com/fullchain.pem;
                ssl_certificate_key /etc/letsencrypt/live/pet-speak-backend.com/privkey.pem;

                location / {
                    proxy_pass http://localhost:3000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                }
            }
            EOF

            # Enable the Nginx configuration
            ln -s /etc/nginx/sites-available/pet-speak-backend /etc/nginx/sites-enabled/ &&
            nginx -t &&

            # Restart Nginx
            systemctl restart nginx &&

            # Obtain SSL certificate from Let's Encrypt
            certbot --nginx -d pet-speak-backend.com -d www.pet-speak-backend.com --non-interactive --agree-tos --email your-email@example.com &&

            # Navigate to project directory
            PROJECT_DIR=/root/pet-speak-backend
            mkdir -p /root &&

            # Clone repository if it doesn't exist
            if [ ! -d \$PROJECT_DIR ]; then
              git clone https://\$GIT_USERNAME:\$GIT_PASSWORD@github.com/${GITHUB_REPOSITORY}.git \$PROJECT_DIR &&
              cd \$PROJECT_DIR
            else
              cd \$PROJECT_DIR &&
              git pull https://\$GIT_USERNAME:\$GIT_PASSWORD@github.com/${GITHUB_REPOSITORY}.git master
            fi &&

            # Install dependencies
            npm install &&

            # Build the NestJS app
            npm run build || { echo 'Build failed'; exit 1; } &&

            # Restart the application with PM2
            pm2 delete pet-speak-backend || true
            pm2 start \$PROJECT_DIR/dist/main.js --name pet-speak-backend --watch
            pm2 save
          "
