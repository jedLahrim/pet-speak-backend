name: Deploy to Contabo

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to Contabo
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
            # Update package lists
            apt-get update -y &&
          
            # Install and configure Nginx
            if ! command -v nginx &> /dev/null; then
            apt-get install -y nginx
            rm /etc/nginx/sites-enabled/default
            cat > /etc/nginx/sites-available/pet-speak-backend << 'EOL'
            server {
            listen 80;
            server_name $SERVER_IP;
          
            location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade \$http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host \$host;
            proxy_cache_bypass \$http_upgrade;
            }
          }
            EOL
            ln -s /etc/nginx/sites-available/pet-speak-backend /etc/nginx/sites-enabled/
            systemctl restart nginx
            fi

            # Install Node.js 20.x and npm if not installed
            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | bash - &&
              apt-get install -y nodejs git
            fi &&

            # Install global dependencies
            npm install -g pm2 &&

            # Navigate to project directory
            mkdir -p /root &&
            cd /root &&

            # Clone repository if it doesn't exist
            if [ ! -d pet-speak-backend ]; then
              git clone https://$GIT_USERNAME:$GIT_PASSWORD@github.com/${GITHUB_REPOSITORY}.git pet-speak-backend &&
              cd pet-speak-backend
            else
              cd pet-speak-backend &&
              git pull https://$GIT_USERNAME:$GIT_PASSWORD@github.com/${GITHUB_REPOSITORY}.git master
            fi &&

            # Install dependencies
            npm install &&

            # Build the NestJS app
            npm run build || { echo 'Build failed'; exit 1; } &&

            # Restart the application
            pm2 delete pet-speak-backend
            pm2 start /root/pet-speak-backend/dist/main.js --name pet-speak-backend --watch -- --port 80
            pm2 save
          "
